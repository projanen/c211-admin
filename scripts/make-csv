#!/bin/bash

# Creates .csv files (for grading) from .roster files (from pairup)

if [ $# -ne 2 ]; then
  echo
  echo "Creates .csv files (for grading) from .roster files (from pairup)"
  echo
  echo "Usage: make-csv assignment {'all' OR lab_section_letter}"
  echo
  echo "Example: make-csv a1 all   <-- creates for all sections"
  echo "Example: make-csv lab3 D   <-- creates for one section"
  echo
  exit
fi

# section implies single-letter lab designation
# lab or lab_name means long version of lab name

assignment=$1
section=$2

lab_names_all=(ATT Beta CoolLab Dragon Emerald FunkyBunch Grapes HappyHour)

labs=()

if [ $section == all ]
then
    labs=("${lab_names_all[@]}")
else
    for lab_name in "${lab_names_all[@]}"; do
	if [ "$section" == "${lab_name:0:1}" ];then
	    labs=($lab_name)
	    break
	fi
    done
    if [ -z "${labs[@]}" ]; then
	echo "Unrecognized lab section name!"
	echo "Expected A, B, C, ..."
	exit
    fi
fi

rosters="/u/c211/spring15/pairup"
csvs="/u/c211/spring15/grades/csvs/$assignment"

# Check for roster directory
if [ ! -d "$rosters" ]; then
    echo "$rosters does not exist!  Nothing done."
    exit
fi

# Check for csv directory
if [ ! -d "$csvs" ]; then
    echo "$csvs does not exist!  Nothing done."
    exit
fi

# Process the lab(s)
for lab_name in "${labs[@]}"; do

    roster="$rosters/$lab_name.roster"

    # Check for roster file for this lab section
    if [ ! -f "$roster" ]; then
	echo "$roster does not exist!  Skipping $lab.  Continuing..."
	continue
    fi

    section="${lab_name:0:1}"
    csv="$csvs/$section.csv"
    #csv="/u/c211/spring15/paul-test/$section.csv"

    if [ -f "$csv" ]
    then
	echo "$section.csv already exists!  Will not overwrite."
	echo "If this is your intention, delete it manually."
    else
	
	##Here's what we got
	#echo "Time to create $csv from $roster"

	echo "writing $section.csv"

	# see distribute, code duplication
	while read username_realname; do
	    username="${username_realname%% *}"
	    
	    ##print out what we now know
	    #echo "$username in $section defaulting to Z on $assignment."
	    
	    echo "$username, Z" >> "$csv"
	done < <(cat $roster)
    fi
done
